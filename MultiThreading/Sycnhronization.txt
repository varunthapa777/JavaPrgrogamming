1. Resource Sharing : multiple thread in stack can access shared object in the heap.
2. Critical Section : Its a part of process which try to access the shared resource.
3. Mutual Exclusion : only one thread going to the critcal section at a time.

//system to take care Mutual Exclusion
//Old Methods when the os is introduced
4. Locking/Mutex : thread puts a lock (mutex = 1) to shared object and other threads can't access it.
    In this Threads are responsible for achieving mutual exclusion
5. Semophore : It is a unix os method, In this we use two function wait() and signal() by which we achieve sychronization. 
    In this OS is responsible for achieving mutual exclusion.

//Latest Method used in java : It use object oriented property;
6. Monitor : There is a Shared object who have read() write() , mutex and queue defined a Thread only nead to invoke read and write method 
it will lock the Thread by it self;


7. Race Conditio
8. Inter-Thread communication
